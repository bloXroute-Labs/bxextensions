FROM python:3.8.3-alpine3.11 as builder

ARG GID=503
ARG UID=503

RUN if [ $(grep ":${GID}:" /etc/group | wc -l) == 0 ]; then addgroup -S -g ${GID} bxextensions; fi

RUN if [ $(grep ":${UID}:" /etc/passwd | wc -l) == 0 ]; then adduser -u ${UID} -S -g ${GID} bxextensions; fi  && \
    mkdir -p /app/bxextensions && \
    chown -R ${UID}:${GID} /app/bxextensions

RUN apk update \
 && apk add --no-cache \
# grab su-exec for easy step-down from root
    'su-exec>=0.2' \
    tini \
    # grab bash for the convenience
    bash \
    # grab requirements for bxextenstions
    gcc libc-dev unixodbc-dev make \
    build-base \
    gfortran \
    python3 \
    libc6-compat \
    freetype-dev \
    openblas-dev \
    tcl \
    tk \
    python3-dev \
    pkgconfig \
    musl \
    libgfortran \
    libgcc \
    automake \
    # autogen \
    autoconf \
    libtool \
    # libtool-bin \
    openssl-dev \
    cmake \
    libexecinfo-dev

#upgrade pip
RUN pip3 install --upgrade pip setuptools

WORKDIR /app/bxextensions
COPY interface/ interface/
COPY lib/ lib/
COPY build_extensions.py ./
COPY CMakeLists.txt ./

RUN  chown -R ${UID}:${GID} /app/bxextensions

ENV PYTHONPATH=/app/bxextensions
ENV PYTHONS="python3"

ARG TAG=latest
RUN echo "build extensions $TAG"
RUN cd /app/bxextensions && \
    python build_extensions.py --build-type Debug --src-dir /app/bxextensions --package-installation --no-cache && \
    mkdir -p /app/bxextensions/release/lib/ && cp -r ./*.so /app/bxextensions/release/lib/

FROM scratch AS export-stage
COPY --from=builder /app/bxextensions/release/lib/ /
